using System;
using System.Collections.Generic;
using TensorFlow;

namespace TFSTest
{
    class TestData
    {
        public static float[][] TestClassification2D = {new []{0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
new [] {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
new [] {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
new [] {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
new [] {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
new [] {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
new [] {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
new [] {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.011764705882352941f, 0.00392156862745098f, 0.0f, 0.0f, 0.027450980392156862f, 0.0f, 0.1450980392156863f, 0.0f, 0.0f},
new [] {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.00392156862745098f, 0.00784313725490196f, 0.0f, 0.10588235294117647f, 0.32941176470588235f, 0.043137254901960784f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.4666666666666667f, 0.0f, 0.0f},
new [] {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.00392156862745098f, 0.0f, 0.0f, 0.34509803921568627f, 0.5607843137254902f, 0.43137254901960786f, 0.0f, 0.0f, 0.0f, 0.0f, 0.08627450980392157f, 0.36470588235294116f, 0.41568627450980394f, 0.0f, 0.0f},
new [] {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.01568627450980392f, 0.0f, 0.20784313725490197f, 0.5058823529411764f, 0.47058823529411764f, 0.5764705882352941f, 0.6862745098039216f, 0.615686274509804f, 0.6509803921568628f, 0.5294117647058824f, 0.6039215686274509f, 0.6588235294117647f, 0.5490196078431373f, 0.0f, 0.0f},
new [] {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.00784313725490196f, 0.0f, 0.043137254901960784f, 0.5372549019607843f, 0.5098039215686274f, 0.5019607843137255f, 0.6274509803921569f, 0.6901960784313725f, 0.6235294117647059f, 0.6549019607843137f, 0.6980392156862745f, 0.5843137254901961f, 0.592156862745098f, 0.5647058823529412f, 0.0f, 0.0f},
new [] {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.00392156862745098f, 0.0f, 0.00784313725490196f, 0.00392156862745098f, 0.0f, 0.011764705882352941f, 0.0f, 0.0f, 0.45098039215686275f, 0.4470588235294118f, 0.41568627450980394f, 0.5372549019607843f, 0.6588235294117647f, 0.6f, 0.611764705882353f, 0.6470588235294118f, 0.6549019607843137f, 0.5607843137254902f, 0.615686274509804f, 0.6196078431372549f, 0.043137254901960784f, 0.0f},
new [] {0.0f, 0.0f, 0.0f, 0.0f, 0.00392156862745098f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.011764705882352941f, 0.0f, 0.0f, 0.34901960784313724f, 0.5450980392156862f, 0.35294117647058826f, 0.3686274509803922f, 0.6f, 0.5843137254901961f, 0.5137254901960784f, 0.592156862745098f, 0.6627450980392157f, 0.6745098039215687f, 0.5607843137254902f, 0.6235294117647059f, 0.6627450980392157f, 0.18823529411764706f, 0.0f},
new [] {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.00784313725490196f, 0.01568627450980392f, 0.00392156862745098f, 0.0f, 0.0f, 0.0f, 0.3843137254901961f, 0.5333333333333333f, 0.43137254901960786f, 0.42745098039215684f, 0.43137254901960786f, 0.6352941176470588f, 0.5294117647058824f, 0.5647058823529412f, 0.5843137254901961f, 0.6235294117647059f, 0.6549019607843137f, 0.5647058823529412f, 0.6196078431372549f, 0.6627450980392157f, 0.4666666666666667f, 0.0f},
new [] {0.0f, 0.0f, 0.00784313725490196f, 0.00784313725490196f, 0.00392156862745098f, 0.00784313725490196f, 0.0f, 0.0f, 0.0f, 0.0f, 0.10196078431372549f, 0.4235294117647059f, 0.4588235294117647f, 0.38823529411764707f, 0.43529411764705883f, 0.4588235294117647f, 0.5333333333333333f, 0.611764705882353f, 0.5254901960784314f, 0.6039215686274509f, 0.6039215686274509f, 0.611764705882353f, 0.6274509803921569f, 0.5529411764705883f, 0.5764705882352941f, 0.611764705882353f, 0.6980392156862745f, 0.0f},
new [] {0.011764705882352941f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.08235294117647059f, 0.20784313725490197f, 0.3607843137254902f, 0.4588235294117647f, 0.43529411764705883f, 0.403921568627451f, 0.45098039215686275f, 0.5058823529411764f, 0.5254901960784314f, 0.5607843137254902f, 0.6039215686274509f, 0.6470588235294118f, 0.6666666666666666f, 0.6039215686274509f, 0.592156862745098f, 0.6039215686274509f, 0.5607843137254902f, 0.5411764705882353f, 0.5882352941176471f, 0.6470588235294118f, 0.16862745098039217f},
new [] {0.0f, 0.0f, 0.09019607843137255f, 0.21176470588235294f, 0.2549019607843137f, 0.2980392156862745f, 0.3333333333333333f, 0.4627450980392157f, 0.5019607843137255f, 0.4823529411764706f, 0.43529411764705883f, 0.44313725490196076f, 0.4627450980392157f, 0.4980392156862745f, 0.49019607843137253f, 0.5450980392156862f, 0.5215686274509804f, 0.5333333333333333f, 0.6274509803921569f, 0.5490196078431373f, 0.6078431372549019f, 0.6313725490196078f, 0.5647058823529412f, 0.6078431372549019f, 0.6745098039215687f, 0.6313725490196078f, 0.7411764705882353f, 0.24313725490196078f},
new [] {0.0f, 0.26666666666666666f, 0.3686274509803922f, 0.35294117647058826f, 0.43529411764705883f, 0.4470588235294118f, 0.43529411764705883f, 0.4470588235294118f, 0.45098039215686275f, 0.4980392156862745f, 0.5294117647058824f, 0.5333333333333333f, 0.5607843137254902f, 0.49411764705882355f, 0.4980392156862745f, 0.592156862745098f, 0.6039215686274509f, 0.5607843137254902f, 0.5803921568627451f, 0.49019607843137253f, 0.6352941176470588f, 0.6352941176470588f, 0.5647058823529412f, 0.5411764705882353f, 0.6f, 0.6352941176470588f,
0.7686274509803922f, 0.22745098039215686f},
new [] {0.27450980392156865f, 0.6627450980392157f, 0.5058823529411764f, 0.40784313725490196f, 0.3843137254901961f, 0.39215686274509803f, 0.3686274509803922f, 0.3803921568627451f, 0.3843137254901961f, 0.4f, 0.4235294117647059f, 0.41568627450980394f, 0.4666666666666667f, 0.47058823529411764f, 0.5058823529411764f, 0.5843137254901961f, 0.611764705882353f, 0.6549019607843137f, 0.7450980392156863f, 0.7450980392156863f, 0.7686274509803922f, 0.7764705882352941f, 0.7764705882352941f, 0.7333333333333333f, 0.7725490196078432f, 0.7411764705882353f, 0.7215686274509804f, 0.1411764705882353f},
new [] {0.06274509803921569f, 0.49411764705882355f, 0.6705882352941176f, 0.7372549019607844f, 0.7372549019607844f, 0.7215686274509804f, 0.6705882352941176f, 0.6f, 0.5294117647058824f, 0.47058823529411764f, 0.49411764705882355f, 0.4980392156862745f, 0.5725490196078431f, 0.7254901960784313f, 0.7647058823529411f, 0.8196078431372549f, 0.8156862745098039f, 0.99f, 0.8196078431372549f, 0.6941176470588235f, 0.9607843137254902f, 0.9882352941176471f, 0.984313725490196f, 0.984313725490196f, 0.9686274509803922f, 0.8627450980392157f, 0.807843137254902f, 0.19215686274509805f},
new [] {0.0f, 0.0f, 0.0f, 0.047058823529411764f, 0.2627450980392157f, 0.41568627450980394f, 0.6431372549019608f, 0.7254901960784313f, 0.7803921568627451f, 0.8235294117647058f, 0.8274509803921568f, 0.8235294117647058f, 0.8156862745098039f, 0.7450980392156863f, 0.5882352941176471f, 0.3215686274509804f, 0.03137254901960784f, 0.0f, 0.0f, 0.0f, 0.6980392156862745f, 0.8156862745098039f, 0.7372549019607844f, 0.6862745098039216f, 0.6352941176470588f, 0.6196078431372549f, 0.592156862745098f, 0.043137254901960784f},
new [] {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
new [] {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
new [] {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
new [] {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
new [] {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
new [] {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f}};



        public static void PrintImage()
        {
            foreach(var row in TestClassification2D)
            {
                foreach(var pixel in row)
                {
                    var pixelValue = pixel * 256;
                    
                    PrintPixel((int)Math.Floor(pixelValue));
                }
                Console.WriteLine();
            }

        }

        private static void PrintPixel(int pixel)
        {
            var shadesOfGrey = "$@B%8&WM#*oahkbdpqwmZO0QLCJUYXzcvunxrjft/\\|()1{}[]?-_+~<>i!lI;:,\"^`'. ".ToCharArray();
            Array.Reverse(shadesOfGrey);
            Console.Write("{0} ", shadesOfGrey[(pixel / 5)]);
        }
        
    }

}